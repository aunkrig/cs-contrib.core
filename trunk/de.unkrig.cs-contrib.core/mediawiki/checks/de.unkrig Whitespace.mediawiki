<!-- This file was generated by the CS doclet; see http://cs-contrib.unkrig.de -->
Verifies that tokens are, respectively are not preceded with (and/or followed by) whitespace.
<p>
  This check supersedes all of CheckStyle's whitespace-related checks:
</p>
<ul>
  <li>Generic Whitespace</li>
  <li>Empty For Initializer Pad</li>
  <li>Empty For Iterator Pad</li>
  <li>No Whitespace After</li>
  <li>No Whitespace Before</li>
  <li>Method Parameter Pad</li>
  <li>Paren Pad</li>
  <li>Typecast Paren Pad</li>
  <li>Whitespace After</li>
  <li>Whitespace Around</li>
</ul>
<p>
  , as well as
</p>
<ul>
  <li>de.unkrig.ParenPad</li>
  <li>de.unkrig.WhitespaceAround</li>
</ul>

== Properties ==

Default values appear <u>underlined</u>.

<dl>
<dt>whitespaceBefore = "abstract, <u>and__expr</u>, <u>and__type_bound</u>, <u>and_assign</u>, <u>assert</u>, <u>assign__assignment</u>, <u>assign__var_decl</u>, at__anno, at__anno_decl, bitwise_complement, boolean, <u>break</u>, byte, <u>case</u>, <u>catch</u>, char, char_literal, <u>class__class_decl</u>, class__class_literal, colon__case, colon__default, <u>colon__enhanced_for</u>, colon__labeled_stat, <u>colon__ternary</u>, comma, <u>conditional_and</u>, <u>conditional_or</u>, <u>continue</u>, <u>default__anno_elem</u>, <u>default__switch</u>, <u>divide</u>, <u>divide_assign</u>, <u>do</u>, dot__import, dot__package_decl, dot__qualified_type, dot__selector, double, double_literal, ellipsis, <u>else</u>, <u>enum</u>, <u>equal</u>, <u>extends__type</u>, <u>extends__type_bound</u>, false, final, <u>finally</u>, float, float_literal, <u>for</u>, <u>greater</u>, <u>greater_equal</u>, <u>if</u>, <u>implements</u>, <u>import</u>, <u>import__static_import</u>, <u>instanceof</u>, int, int_literal, interface, <u>l_angle__meth_decl_type_params</u>, l_angle__meth_invocation_type_args, l_angle__type_args, l_angle__type_params, l_brack__array_decl, l_brack__index, l_curly__anno_array_init, <u>l_curly__anon_class</u>, l_curly__array_init, <u>l_curly__block</u>, <u>l_curly__catch</u>, <u>l_curly__do</u>, l_curly__empty_anno_array_init, <u>l_curly__empty_anon_class</u>, l_curly__empty_array_init, <u>l_curly__empty_catch</u>, <u>l_curly__empty_meth_decl</u>, <u>l_curly__empty_type_decl</u>, <u>l_curly__enum_const</u>, <u>l_curly__finally</u>, <u>l_curly__for</u>, <u>l_curly__if</u>, <u>l_curly__instance_init</u>, <u>l_curly__labeled_stat</u>, <u>l_curly__meth_decl</u>, <u>l_curly__static_init</u>, <u>l_curly__switch</u>, <u>l_curly__synchronized</u>, <u>l_curly__try</u>, <u>l_curly__type_decl</u>, <u>l_curly__while</u>, l_paren__anno, l_paren__anno_elem_decl, l_paren__cast, <u>l_paren__catch</u>, <u>l_paren__do_while</u>, <u>l_paren__for</u>, <u>l_paren__for_no_init</u>, <u>l_paren__if</u>, l_paren__meth_invocation, l_paren__params, l_paren__parenthesized, <u>left_shift</u>, <u>left_shift_assign</u>, <u>less</u>, <u>less_equal</u>, logical_complement, long, long_literal, <u>minus__additive</u>, minus__unary, <u>minus_assign</u>, <u>modulo</u>, <u>modulo_assign</u>, <u>multiply</u>, <u>multiply_assign</u>, name__ambiguous, name__anno, name__anno_elem_decl, name__anno_member, <u>name__ctor_decl</u>, name__import_component, name__import_type, <u>name__meth_decl</u>, name__package_decl, <u>name__param</u>, name__qualified_type, name__simple_type, <u>name__type_decl</u>, <u>name__local_var_decl</u>, native, new, <u>not_equal</u>, null, <u>or</u>, <u>or_assign</u>, <u>package</u>, <u>plus__additive</u>, plus__unary, <u>plus_assign</u>, post_decr, post_incr, pre_decr, pre_incr, private, protected, public, <u>question__ternary</u>, question__wildcard_type, r_angle__meth_decl_type_params, r_angle__meth_invocation_type_args, r_angle__type_args, r_angle__type_params, r_brack__array_decl, r_brack__index, <u>r_curly__anno_array_init</u>, <u>r_curly__anon_class</u>, <u>r_curly__array_init</u>, <u>r_curly__block</u>, <u>r_curly__catch</u>, <u>r_curly__do</u>, <u>r_curly__else</u>, r_curly__empty_anno_array_init, r_curly__empty_anon_class, r_curly__empty_array_init, r_curly__empty_catch, r_curly__empty_meth_decl, r_curly__empty_type_decl, r_curly__enum_const_decl, <u>r_curly__finally</u>, <u>r_curly__for</u>, <u>r_curly__if</u>, <u>r_curly__instance_init</u>, <u>r_curly__labeled_stat</u>, <u>r_curly__meth_decl</u>, <u>r_curly__static_init</u>, <u>r_curly__switch</u>, <u>r_curly__synchronized</u>, <u>r_curly__try</u>, <u>r_curly__type_decl</u>, <u>r_curly__while</u>, r_paren__anno, r_paren__anno_elem_decl, r_paren__cast, r_paren__catch, r_paren__do_while, r_paren__for, r_paren__for_no_update, r_paren__if, r_paren__meth_invocation, r_paren__params, r_paren__parenthesized, <u>return__expr</u>, <u>return__no_expr</u>, <u>right_shift</u>, <u>right_shift_assign</u>, semi__abstract_meth_decl, semi__anno_elem_decl, semi__empty_stat, semi__enum_decl, semi__field_decl, semi__for_condition_no_update, semi__for_condition_update, semi__for_init_condition, semi__for_init_no_condition, semi__for_no_condition_no_update, semi__for_no_condition_update, semi__for_no_init_condition, semi__for_no_init_no_condition, semi__import, semi__package_decl, semi__statement, semi__static_import, <u>semi__type_decl</u>, short, star__type_import_on_demand, <u>static__static_import</u>, static__mod, <u>static__static_init</u>, string_literal, super__ctor_call, super__expr, <u>super__type_bound</u>, <u>switch</u>, <u>synchronized__mod</u>, <u>synchronized__synchronized</u>, <u>this__ctor_call</u>, this__expr, <u>throw</u>, <u>throws</u>, transient, true, <u>try</u>, <u>unsigned_right_shift</u>, <u>unsigned_right_shift_assign</u>, <u>void</u>, volatile, <u>while__do</u>, <u>while__while</u>, <u>xor</u>, <u>xor_assign</u>"
<dd>The Java elements which must be preceded with whitespace (or a line break).
</dl>

<dl>
<dt>noWhitespaceBefore = "abstract, and__expr, and__type_bound, and_assign, assert, assign__assignment, assign__var_decl, at__anno, at__anno_decl, bitwise_complement, boolean, break, byte, case, catch, char, char_literal, class__class_decl, <u>class__class_literal</u>, <u>colon__case</u>, <u>colon__default</u>, colon__enhanced_for, <u>colon__labeled_stat</u>, colon__ternary, <u>comma</u>, conditional_and, conditional_or, continue, default__anno_elem, default__switch, divide, divide_assign, do, <u>dot__import</u>, <u>dot__package_decl</u>, <u>dot__qualified_type</u>, <u>dot__selector</u>, double, double_literal, <u>ellipsis</u>, else, enum, equal, extends__type, extends__type_bound, false, final, finally, float, float_literal, for, greater, greater_equal, if, implements, import, import__static_import, instanceof, int, int_literal, interface, l_angle__meth_decl_type_params, <u>l_angle__meth_invocation_type_args</u>, <u>l_angle__type_args</u>, <u>l_angle__type_params</u>, <u>l_brack__array_decl</u>, <u>l_brack__index</u>, l_curly__anno_array_init, l_curly__anon_class, l_curly__array_init, l_curly__block, l_curly__catch, l_curly__do, l_curly__empty_anno_array_init, l_curly__empty_anon_class, l_curly__empty_array_init, l_curly__empty_catch, l_curly__empty_meth_decl, l_curly__empty_type_decl, l_curly__enum_const, l_curly__finally, l_curly__for, l_curly__if, l_curly__instance_init, l_curly__labeled_stat, l_curly__meth_decl, l_curly__static_init, l_curly__switch, l_curly__synchronized, l_curly__try, l_curly__type_decl, l_curly__while, <u>l_paren__anno</u>, <u>l_paren__anno_elem_decl</u>, l_paren__cast, l_paren__catch, l_paren__do_while, l_paren__for, l_paren__for_no_init, l_paren__if, <u>l_paren__meth_invocation</u>, <u>l_paren__params</u>, l_paren__parenthesized, left_shift, left_shift_assign, less, less_equal, logical_complement, long, long_literal, minus__additive, minus__unary, minus_assign, modulo, modulo_assign, multiply, multiply_assign, name__ambiguous, <u>name__anno</u>, name__anno_elem_decl, name__anno_member, name__ctor_decl, name__import_component, name__import_type, name__meth_decl, name__package_decl, name__param, name__qualified_type, name__simple_type, name__type_decl, name__local_var_decl, native, new, not_equal, null, or, or_assign, package, plus__additive, plus__unary, plus_assign, <u>post_decr</u>, <u>post_incr</u>, pre_decr, pre_incr, private, protected, public, question__ternary, question__wildcard_type, <u>r_angle__meth_decl_type_params</u>, <u>r_angle__meth_invocation_type_args</u>, <u>r_angle__type_args</u>, <u>r_angle__type_params</u>, <u>r_brack__array_decl</u>, <u>r_brack__index</u>, r_curly__anno_array_init, r_curly__anon_class, r_curly__array_init, r_curly__block, r_curly__catch, r_curly__do, r_curly__else, <u>r_curly__empty_anno_array_init</u>, <u>r_curly__empty_anon_class</u>, <u>r_curly__empty_array_init</u>, <u>r_curly__empty_catch</u>, <u>r_curly__empty_meth_decl</u>, <u>r_curly__empty_type_decl</u>, <u>r_curly__enum_const_decl</u>, r_curly__finally, r_curly__for, r_curly__if, r_curly__instance_init, r_curly__labeled_stat, r_curly__meth_decl, r_curly__static_init, r_curly__switch, r_curly__synchronized, r_curly__try, r_curly__type_decl, r_curly__while, <u>r_paren__anno</u>, <u>r_paren__anno_elem_decl</u>, <u>r_paren__cast</u>, <u>r_paren__catch</u>, <u>r_paren__do_while</u>, <u>r_paren__for</u>, <u>r_paren__for_no_update</u>, <u>r_paren__if</u>, <u>r_paren__meth_invocation</u>, <u>r_paren__params</u>, <u>r_paren__parenthesized</u>, return__expr, return__no_expr, right_shift, right_shift_assign, <u>semi__abstract_meth_decl</u>, <u>semi__anno_elem_decl</u>, semi__empty_stat, <u>semi__enum_decl</u>, <u>semi__field_decl</u>, <u>semi__for_condition_no_update</u>, <u>semi__for_condition_update</u>, <u>semi__for_init_condition</u>, <u>semi__for_init_no_condition</u>, <u>semi__for_no_condition_no_update</u>, <u>semi__for_no_condition_update</u>, <u>semi__for_no_init_condition</u>, <u>semi__for_no_init_no_condition</u>, <u>semi__import</u>, <u>semi__package_decl</u>, <u>semi__statement</u>, <u>semi__static_import</u>, semi__type_decl, short, <u>star__type_import_on_demand</u>, static__static_import, static__mod, static__static_init, string_literal, super__ctor_call, super__expr, super__type_bound, switch, synchronized__mod, synchronized__synchronized, this__ctor_call, this__expr, throw, throws, transient, true, try, unsigned_right_shift, unsigned_right_shift_assign, void, volatile, while__do, while__while, xor, xor_assign"
<dd>The Java elements which must not be preceded with whitespace (or are preceded with a line break).
</dl>

<dl>
<dt>whitespaceAfter = "<u>abstract</u>, <u>and__expr</u>, <u>and__type_bound</u>, <u>and_assign</u>, <u>assert</u>, <u>assign__assignment</u>, <u>assign__var_decl</u>, at__anno, at__anno_decl, bitwise_complement, boolean, break, byte, <u>case</u>, <u>catch</u>, char, char_literal, <u>class__class_decl</u>, class__class_literal, <u>colon__case</u>, <u>colon__default</u>, <u>colon__enhanced_for</u>, <u>colon__labeled_stat</u>, <u>colon__ternary</u>, <u>comma</u>, <u>conditional_and</u>, <u>conditional_or</u>, continue, <u>default__anno_elem</u>, default__switch, <u>divide</u>, <u>divide_assign</u>, <u>do</u>, dot__import, dot__package_decl, dot__qualified_type, dot__selector, double, double_literal, <u>ellipsis</u>, <u>else</u>, <u>enum</u>, <u>equal</u>, <u>extends__type</u>, <u>extends__type_bound</u>, false, <u>final</u>, <u>finally</u>, float, float_literal, <u>for</u>, <u>greater</u>, <u>greater_equal</u>, <u>if</u>, <u>implements</u>, <u>import</u>, <u>import__static_import</u>, <u>instanceof</u>, int, int_literal, <u>interface</u>, l_angle__meth_decl_type_params, l_angle__meth_invocation_type_args, l_angle__type_args, l_angle__type_params, l_brack__array_decl, l_brack__index, <u>l_curly__anno_array_init</u>, <u>l_curly__anon_class</u>, <u>l_curly__array_init</u>, <u>l_curly__block</u>, <u>l_curly__catch</u>, <u>l_curly__do</u>, l_curly__empty_anno_array_init, l_curly__empty_anon_class, l_curly__empty_array_init, l_curly__empty_catch, l_curly__empty_meth_decl, l_curly__empty_type_decl, <u>l_curly__enum_const</u>, <u>l_curly__finally</u>, <u>l_curly__for</u>, <u>l_curly__if</u>, <u>l_curly__instance_init</u>, <u>l_curly__labeled_stat</u>, <u>l_curly__meth_decl</u>, <u>l_curly__static_init</u>, <u>l_curly__switch</u>, <u>l_curly__synchronized</u>, <u>l_curly__try</u>, <u>l_curly__type_decl</u>, <u>l_curly__while</u>, l_paren__anno, l_paren__anno_elem_decl, l_paren__cast, l_paren__catch, l_paren__do_while, l_paren__for, l_paren__for_no_init, l_paren__if, l_paren__meth_invocation, l_paren__params, l_paren__parenthesized, <u>left_shift</u>, <u>left_shift_assign</u>, <u>less</u>, <u>less_equal</u>, logical_complement, long, long_literal, <u>minus__additive</u>, minus__unary, <u>minus_assign</u>, <u>modulo</u>, <u>modulo_assign</u>, <u>multiply</u>, <u>multiply_assign</u>, name__ambiguous, name__anno, name__anno_elem_decl, <u>name__anno_member</u>, name__ctor_decl, name__import_component, name__import_type, name__meth_decl, name__package_decl, name__param, name__qualified_type, name__simple_type, name__type_decl, name__local_var_decl, <u>native</u>, <u>new</u>, <u>not_equal</u>, null, <u>or</u>, <u>or_assign</u>, <u>package</u>, <u>plus__additive</u>, plus__unary, <u>plus_assign</u>, post_decr, post_incr, pre_decr, pre_incr, <u>private</u>, <u>protected</u>, <u>public</u>, <u>question__ternary</u>, question__wildcard_type, <u>r_angle__meth_decl_type_params</u>, r_angle__meth_invocation_type_args, r_angle__type_args, r_angle__type_params, r_brack__array_decl, r_brack__index, r_curly__anno_array_init, r_curly__anon_class, r_curly__array_init, <u>r_curly__block</u>, <u>r_curly__catch</u>, <u>r_curly__do</u>, <u>r_curly__else</u>, r_curly__empty_anno_array_init, r_curly__empty_anon_class, r_curly__empty_array_init, <u>r_curly__empty_catch</u>, <u>r_curly__empty_meth_decl</u>, <u>r_curly__empty_type_decl</u>, r_curly__enum_const_decl, <u>r_curly__finally</u>, <u>r_curly__for</u>, <u>r_curly__if</u>, <u>r_curly__instance_init</u>, <u>r_curly__labeled_stat</u>, <u>r_curly__meth_decl</u>, <u>r_curly__static_init</u>, <u>r_curly__switch</u>, <u>r_curly__synchronized</u>, <u>r_curly__try</u>, <u>r_curly__type_decl</u>, <u>r_curly__while</u>, r_paren__anno, r_paren__anno_elem_decl, <u>r_paren__cast</u>, <u>r_paren__catch</u>, r_paren__do_while, r_paren__for, r_paren__for_no_update, <u>r_paren__if</u>, r_paren__meth_invocation, r_paren__params, r_paren__parenthesized, <u>return__expr</u>, return__no_expr, <u>right_shift</u>, <u>right_shift_assign</u>, <u>semi__abstract_meth_decl</u>, <u>semi__anno_elem_decl</u>, <u>semi__empty_stat</u>, <u>semi__enum_decl</u>, <u>semi__field_decl</u>, semi__for_condition_no_update, <u>semi__for_condition_update</u>, <u>semi__for_init_condition</u>, semi__for_init_no_condition, semi__for_no_condition_no_update, <u>semi__for_no_condition_update</u>, <u>semi__for_no_init_condition</u>, semi__for_no_init_no_condition, <u>semi__import</u>, <u>semi__package_decl</u>, <u>semi__statement</u>, <u>semi__static_import</u>, <u>semi__type_decl</u>, short, star__type_import_on_demand, <u>static__static_import</u>, <u>static__mod</u>, <u>static__static_init</u>, string_literal, super__ctor_call, super__expr, <u>super__type_bound</u>, <u>switch</u>, <u>synchronized__mod</u>, <u>synchronized__synchronized</u>, this__ctor_call, this__expr, <u>throw</u>, <u>throws</u>, <u>transient</u>, true, <u>try</u>, <u>unsigned_right_shift</u>, <u>unsigned_right_shift_assign</u>, void, <u>volatile</u>, <u>while__do</u>, <u>while__while</u>, <u>xor</u>, <u>xor_assign</u>"
<dd>The Java elements which must be followed by whitespace (or a line break).
</dl>

<dl>
<dt>noWhitespaceAfter = "abstract, and__expr, and__type_bound, and_assign, assert, assign__assignment, assign__var_decl, <u>at__anno</u>, <u>at__anno_decl</u>, <u>bitwise_complement</u>, boolean, break, byte, case, catch, char, char_literal, class__class_decl, class__class_literal, colon__case, colon__default, colon__enhanced_for, colon__labeled_stat, colon__ternary, comma, conditional_and, conditional_or, continue, default__anno_elem, <u>default__switch</u>, divide, divide_assign, do, <u>dot__import</u>, <u>dot__package_decl</u>, <u>dot__qualified_type</u>, <u>dot__selector</u>, double, double_literal, ellipsis, else, enum, equal, extends__type, extends__type_bound, false, final, finally, float, float_literal, for, greater, greater_equal, if, implements, import, import__static_import, instanceof, int, int_literal, interface, <u>l_angle__meth_decl_type_params</u>, <u>l_angle__meth_invocation_type_args</u>, <u>l_angle__type_args</u>, <u>l_angle__type_params</u>, <u>l_brack__array_decl</u>, <u>l_brack__index</u>, l_curly__anno_array_init, l_curly__anon_class, l_curly__array_init, l_curly__block, l_curly__catch, l_curly__do, <u>l_curly__empty_anno_array_init</u>, <u>l_curly__empty_anon_class</u>, <u>l_curly__empty_array_init</u>, <u>l_curly__empty_catch</u>, <u>l_curly__empty_meth_decl</u>, <u>l_curly__empty_type_decl</u>, l_curly__enum_const, l_curly__finally, l_curly__for, l_curly__if, l_curly__instance_init, l_curly__labeled_stat, l_curly__meth_decl, l_curly__static_init, l_curly__switch, l_curly__synchronized, l_curly__try, l_curly__type_decl, l_curly__while, <u>l_paren__anno</u>, <u>l_paren__anno_elem_decl</u>, <u>l_paren__cast</u>, <u>l_paren__catch</u>, <u>l_paren__do_while</u>, <u>l_paren__for</u>, <u>l_paren__for_no_init</u>, <u>l_paren__if</u>, <u>l_paren__meth_invocation</u>, <u>l_paren__params</u>, <u>l_paren__parenthesized</u>, left_shift, left_shift_assign, less, less_equal, <u>logical_complement</u>, long, long_literal, minus__additive, <u>minus__unary</u>, minus_assign, modulo, modulo_assign, multiply, multiply_assign, name__ambiguous, name__anno, <u>name__anno_elem_decl</u>, name__anno_member, <u>name__ctor_decl</u>, <u>name__import_component</u>, <u>name__import_type</u>, <u>name__meth_decl</u>, <u>name__package_decl</u>, <u>name__param</u>, name__qualified_type, name__simple_type, name__type_decl, name__local_var_decl, native, new, not_equal, null, or, or_assign, package, plus__additive, <u>plus__unary</u>, plus_assign, post_decr, post_incr, <u>pre_decr</u>, <u>pre_incr</u>, private, protected, public, question__ternary, question__wildcard_type, r_angle__meth_decl_type_params, <u>r_angle__meth_invocation_type_args</u>, r_angle__type_args, r_angle__type_params, r_brack__array_decl, r_brack__index, r_curly__anno_array_init, r_curly__anon_class, r_curly__array_init, r_curly__block, r_curly__catch, r_curly__do, r_curly__else, r_curly__empty_anno_array_init, r_curly__empty_anon_class, r_curly__empty_array_init, r_curly__empty_catch, r_curly__empty_meth_decl, r_curly__empty_type_decl, r_curly__enum_const_decl, r_curly__finally, r_curly__for, r_curly__if, r_curly__instance_init, r_curly__labeled_stat, r_curly__meth_decl, r_curly__static_init, r_curly__switch, r_curly__synchronized, r_curly__try, r_curly__type_decl, r_curly__while, r_paren__anno, r_paren__anno_elem_decl, r_paren__cast, r_paren__catch, <u>r_paren__do_while</u>, r_paren__for, r_paren__for_no_update, r_paren__if, r_paren__meth_invocation, r_paren__params, r_paren__parenthesized, return__expr, <u>return__no_expr</u>, right_shift, right_shift_assign, semi__abstract_meth_decl, semi__anno_elem_decl, semi__empty_stat, semi__enum_decl, semi__field_decl, <u>semi__for_condition_no_update</u>, semi__for_condition_update, semi__for_init_condition, <u>semi__for_init_no_condition</u>, <u>semi__for_no_condition_no_update</u>, semi__for_no_condition_update, semi__for_no_init_condition, <u>semi__for_no_init_no_condition</u>, semi__import, semi__package_decl, semi__statement, semi__static_import, semi__type_decl, short, <u>star__type_import_on_demand</u>, static__static_import, static__mod, static__static_init, string_literal, <u>super__ctor_call</u>, <u>super__expr</u>, super__type_bound, switch, synchronized__mod, synchronized__synchronized, <u>this__ctor_call</u>, this__expr, throw, throws, transient, true, try, unsigned_right_shift, unsigned_right_shift_assign, void, volatile, while__do, while__while, xor, xor_assign"
<dd>The Java elements which must not be followed by whitespace (or are followed by a line break).
</dl>

